!function(){"use strict";var s,e,t,i;s=class{constructor(s){}moveRight(){this.pos[0]+=this.vel[0]}moveLeft(){this.pos[0]-=this.vel[0]}drawObject(s){s.beginPath(),s.arc(this.pos[0],this.pos[1],this.radius,0,2*Math.PI,!0),s.fillStyle="#00FF00",s.fill(),s.closePath()}},e=class extends s{constructor(s){super(s),this.vel=this.randomVel(),this.pos=this.randomPos(),this.radius=this.randomRadius(),this.startEnemyPos=this.pos[0]}randomRadius(){const s=[2,6,10,18,18,26,26,32,32,40];return s[Math.floor(Math.random()*s.length)]}randomPos(){let s=Math.floor(660*Math.random());return[[-50,1050][Math.floor(2*Math.random())],s]}randomVel(){const s=[1,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,2,2.5,3];return[s[Math.floor(Math.random()*s.length)],0]}},t=class extends s{constructor(s){super(),this.pos=[500,330],this.vel=[0,0,0,0],this.radius=7}moveShip(){this.pos[0]+=this.vel[0],this.pos[0]+=this.vel[1],this.pos[1]+=this.vel[2],this.pos[1]+=this.vel[3]}isCollidedWith(s){return Math.sqrt((this.pos[0]-s.pos[0])**2+(this.pos[1]-s.pos[1])**2)<this.radius+s.radius}isEnemySmaller(s){return s.radius<this.radius}},i=class extends s{constructor(){super(),this.ship=new t({}),this.score=0,this.enemies=[],this.addEnemies(),this.bindKeyHandlers(),this.backgroundImg=new Image,this.backgroundImg.src="src/media/background_01.jpg"}step(){this.moveEnemies(),this.addEnemies(),this.ship.moveShip(),this.growShip()}drawGame(s){s.clearRect(0,0,1e3,660),s.drawImage(this.backgroundImg,0,0,1e3,660),this.enemies.forEach((e=>{e.drawObject(s)})),this.ship.drawObject(s)}addEnemies(){for(let s=0;this.enemies.length<50;s++){const s=new e({});this.enemies.push(s)}}moveEnemies(){for(let s=0;s<this.enemies.length;s++){let e=this.enemies[s];this.isOutCanvas(e.pos)?this.remove(e):-50===e.startEnemyPos?e.moveRight():e.moveLeft()}}isOutCanvas(s){return s[0]<-50||s[0]>1050}remove(s){const e=this.enemies.indexOf(s);this.enemies.splice(e,1)}growShip(){for(let s=0;s<this.enemies.length;s++){let e=this.enemies[s];this.ship.isCollidedWith(e)&&this.ship.isEnemySmaller(e)?(this.ship.radius+=.2,this.increaseScore(e),this.remove(e)):this.ship.isCollidedWith(e)&&this.ship.isEnemySmaller(e)}}increaseScore(s){return this.score+=s.radius}bindKeyHandlers(){const s=this.ship.vel;document.addEventListener("keydown",(function(e){"ArrowUp"===e.code&&(s[2]=-2),"ArrowDown"===e.code&&(s[3]=2),"ArrowLeft"===e.code&&(s[0]=-2),"ArrowRight"===e.code&&(s[1]=2)})),document.addEventListener("keyup",(function(e){"ArrowUp"===e.code&&(s[2]=0),"ArrowDown"===e.code&&(s[3]=0),"ArrowLeft"===e.code&&(s[0]=0),"ArrowRight"===e.code&&(s[1]=0)}))}},window.MovingObject=s,window.Enemy=e,(new class{constructor(){this.game=new i,this.canvas=document.getElementById("background-canvas"),this.ctx=this.canvas.getContext("2d")}start(){setInterval((()=>{this.game.step(),this.game.drawGame(this.ctx)}),10)}}).start()}();
//# sourceMappingURL=main.js.map
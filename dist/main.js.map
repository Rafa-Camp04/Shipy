{"version":3,"file":"main.js","mappings":"6BA2BA,ECaA,ECGA,EC6EA,EH7FA,EA3BA,MAEIA,WAAAA,CAAYC,GAEZ,CAGAC,SAAAA,GACIC,KAAKC,IAAI,IAAID,KAAKE,IAAI,EAE1B,CAEAC,QAAAA,GACIH,KAAKC,IAAI,IAAID,KAAKE,IAAI,EAC1B,CAEAE,UAAAA,CAAWC,GACPA,EAAIC,YACJD,EAAIE,IAAIP,KAAKC,IAAI,GAAID,KAAKC,IAAI,GAAID,KAAKQ,OAAQ,EAAa,EAAVC,KAAKC,IAAQ,GAE/DL,EAAIM,UAAY,UAChBN,EAAIO,OACJP,EAAIQ,WACR,GCiBJ,EAtCA,cAAoBC,EAEhBjB,WAAAA,CAAYC,GACRiB,MAAMjB,GACNE,KAAKE,IAAMF,KAAKgB,YAChBhB,KAAKC,IAAMD,KAAKiB,YAChBjB,KAAKQ,OAASR,KAAKkB,eACnBlB,KAAKmB,cAAgBnB,KAAKC,IAAI,EAClC,CAEAiB,YAAAA,GACI,MAAME,EAAc,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGvD,OAAOA,EAFKX,KAAKY,MAAMZ,KAAKa,SAAWF,EAAYG,QAGvD,CAEAN,SAAAA,GAEI,IAAIO,EAASf,KAAKY,MAAsB,IAAhBZ,KAAKa,UAK7B,MAFY,CAJG,EAAE,GAAI,MAGTb,KAAKY,MAAsB,EAAhBZ,KAAKa,WACAE,EAGhC,CAEAR,SAAAA,GACI,MAAMS,EAAW,CAAC,EAAG,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,EAAG,IAAK,GAItE,MADY,CAACA,EAFDhB,KAAKY,MAAMZ,KAAKa,SAAWG,EAASF,SAElB,EAElC,GCQJ,EAzCA,cAAmBT,EAEfjB,WAAAA,CAAYC,GACRiB,QACAf,KAAKC,IAAM,CAAC,IAAK,KACjBD,KAAKE,IAAM,CAAC,EAAG,EAAG,EAAG,GACrBF,KAAKQ,OAAS,CAClB,CAEAkB,QAAAA,GAEI1B,KAAKC,IAAI,IAAMD,KAAKE,IAAI,GACxBF,KAAKC,IAAI,IAAMD,KAAKE,IAAI,GACxBF,KAAKC,IAAI,IAAMD,KAAKE,IAAI,GACxBF,KAAKC,IAAI,IAAMD,KAAKE,IAAI,EAC5B,CAcAyB,cAAAA,CAAeC,GAGX,OAFiBnB,KAAKoB,MAAM7B,KAAKC,IAAI,GAAK2B,EAAM3B,IAAI,KAAO,GAAKD,KAAKC,IAAI,GAAK2B,EAAM3B,IAAI,KAAO,GAC3ED,KAAKQ,OAASoB,EAAMpB,MAE5C,CAEAsB,cAAAA,CAAeF,GACX,OAAOA,EAAMpB,OAASR,KAAKQ,MAC/B,GCiFJ,EApHA,cAAmBM,EAEfjB,WAAAA,GACIkB,QACAf,KAAK+B,KAAO,IAAIC,EAAK,CAAC,GACtBhC,KAAKiC,MAAQ,EACbjC,KAAKkC,QAAU,GACflC,KAAKmC,aACLnC,KAAKoC,kBACLpC,KAAKqC,cAAgB,IAAIC,MAIzBtC,KAAKqC,cAAcE,IAAM,6BAC7B,CAGAC,IAAAA,GACIxC,KAAKyC,cACLzC,KAAKmC,aACLnC,KAAK+B,KAAKL,WACV1B,KAAK0C,UACT,CAGAC,QAAAA,CAAStC,GACLA,EAAIuC,UAAU,EAAG,EAAG,IAAM,KAC1BvC,EAAIwC,UAAU7C,KAAKqC,cAAe,EAAG,EAAG,IAAM,KAE9CrC,KAAKkC,QAAQY,SAASlB,IAClBA,EAAMxB,WAAWC,EAAI,IAGzBL,KAAK+B,KAAK3B,WAAWC,EACzB,CAGA8B,UAAAA,GACI,IAAK,IAAIY,EAAQ,EAAG/C,KAAKkC,QAAQX,OAAS,GAAIwB,IAAS,CACnD,MAAMnB,EAAQ,IAAIoB,EAAM,CAAC,GACzBhD,KAAKkC,QAAQe,KAAKrB,EACtB,CACJ,CAGAa,WAAAA,GAEI,IAAK,IAAIS,EAAI,EAAGA,EAAIlD,KAAKkC,QAAQX,OAAQ2B,IAAK,CAC1C,IAAItB,EAAQ5B,KAAKkC,QAAQgB,GACrBlD,KAAKmD,YAAYvB,EAAM3B,KACvBD,KAAKoD,OAAOxB,IAIa,KAAzBA,EAAMT,cACNS,EAAM7B,YAEN6B,EAAMzB,UAEd,CACJ,CAGAgD,WAAAA,CAAYlD,GACR,OAAIA,EAAI,IAAM,IAAMA,EAAI,GAAK,IAIjC,CAGAmD,MAAAA,CAAOC,GACH,MAAMC,EAAatD,KAAKkC,QAAQqB,QAAQF,GACxCrD,KAAKkC,QAAQsB,OAAOF,EAAY,EACpC,CAGAZ,QAAAA,GACI,IAAK,IAAIQ,EAAI,EAAGA,EAAIlD,KAAKkC,QAAQX,OAAQ2B,IAAK,CAC1C,IAAItB,EAAQ5B,KAAKkC,QAAQgB,GAErBlD,KAAK+B,KAAKJ,eAAeC,IAAU5B,KAAK+B,KAAKD,eAAeF,IAC5D5B,KAAK+B,KAAKvB,QAAU,GACpBR,KAAKyD,cAAc7B,GACnB5B,KAAKoD,OAAOxB,IACL5B,KAAK+B,KAAKJ,eAAeC,IAAW5B,KAAK+B,KAAKD,eAAeF,EAG5E,CACJ,CAGA6B,aAAAA,CAAc7B,GACV,OAAO5B,KAAKiC,OAASL,EAAMpB,MAC/B,CAEA4B,eAAAA,GACI,MAAMlC,EAAMF,KAAK+B,KAAK7B,IAEtBwD,SAASC,iBAAiB,WAAW,SAASC,GACvB,YAAfA,EAAMC,OAAoB3D,EAAI,IAAM,GACrB,cAAf0D,EAAMC,OAAsB3D,EAAI,GAAK,GACtB,cAAf0D,EAAMC,OAAsB3D,EAAI,IAAM,GACvB,eAAf0D,EAAMC,OAAuB3D,EAAI,GAAK,EAC9C,IAEAwD,SAASC,iBAAiB,SAAS,SAASC,GACrB,YAAfA,EAAMC,OAAoB3D,EAAI,GAAK,GACpB,cAAf0D,EAAMC,OAAsB3D,EAAI,GAAK,GACtB,cAAf0D,EAAMC,OAAsB3D,EAAI,GAAK,GACtB,eAAf0D,EAAMC,OAAuB3D,EAAI,GAAK,EAC9C,GACJ,GCjHJ4D,OAAOhD,aAAeA,EACtBgD,OAAOd,MAAQA,GAEE,ICHjB,MAEInD,WAAAA,GACIG,KAAK+D,KAAO,IAAIC,EAChBhE,KAAKiE,OAASP,SAASQ,eAAe,qBACtClE,KAAKK,IAAML,KAAKiE,OAAOE,WAAW,KACtC,CAEAC,KAAAA,GACIC,aAAY,KACRrE,KAAK+D,KAAKvB,OACVxC,KAAK+D,KAAKpB,SAAS3C,KAAKK,IAAI,GAC7B,GACP,IDTK+D,O","sources":["webpack://shipy/./src/scripts/moving-object.js","webpack://shipy/./src/scripts/enemy.js","webpack://shipy/./src/scripts/ship.js","webpack://shipy/./src/scripts/game.js","webpack://shipy/./src/index.js","webpack://shipy/./src/scripts/game-view.js"],"sourcesContent":["class MovingObject {\r\n\r\n    constructor(options) {\r\n        \r\n    }\r\n\r\n    \r\n    moveRight() {\r\n        this.pos[0]+=this.vel[0];\r\n        // this.pos[1]+=this.vel[1];\r\n    }\r\n\r\n    moveLeft() {\r\n        this.pos[0]-=this.vel[0];\r\n    }\r\n\r\n    drawObject(ctx) {\r\n        ctx.beginPath();\r\n        ctx.arc(this.pos[0], this.pos[1], this.radius, 0, Math.PI * 2, true);\r\n\r\n        ctx.fillStyle = \"#00FF00\";\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    }\r\n\r\n}\r\n\r\nexport default MovingObject;","import MovingObject from \"./moving-object.js\";\r\n\r\nclass Enemy extends MovingObject {\r\n\r\n    constructor(options){\r\n        super(options);\r\n        this.vel = this.randomVel();\r\n        this.pos = this.randomPos();\r\n        this.radius = this.randomRadius();\r\n        this.startEnemyPos = this.pos[0];\r\n    };\r\n\r\n    randomRadius() {\r\n        const validRadius = [2, 6, 10, 18, 18, 26, 26, 32, 32, 40];\r\n        let index = Math.floor(Math.random() * validRadius.length);\r\n\r\n        return validRadius[index];\r\n    };\r\n\r\n    randomPos() {\r\n        const startX = [-50, 1050];\r\n        let startY = Math.floor(Math.random() * 660);\r\n\r\n        let index = Math.floor(Math.random() * 2);\r\n        const pos = [startX[index], startY];\r\n\r\n        return pos;\r\n    };\r\n\r\n    randomVel() {\r\n        const validVel = [1, 1.1, 1.2, 1.3, 1.4, 1.5,  1.6, 1.7, 1.8, 2, 2.5, 3];\r\n        let index = Math.floor(Math.random() * validVel.length);\r\n\r\n        const vel = [validVel[index], 0];\r\n        return vel;\r\n    }\r\n\r\n};\r\n\r\n\r\nexport default Enemy;","import MovingObject from \"./moving-object\"\r\n\r\nclass Ship extends MovingObject {\r\n\r\n    constructor(options) {\r\n        super();\r\n        this.pos = [500, 330];\r\n        this.vel = [0, 0, 0, 0];\r\n        this.radius = 7;\r\n    };\r\n\r\n    moveShip() {\r\n        // debugger\r\n        this.pos[0] += this.vel[0];\r\n        this.pos[0] += this.vel[1];\r\n        this.pos[1] += this.vel[2];\r\n        this.pos[1] += this.vel[3];\r\n    }\r\n\r\n    // isInScreen(ship) {\r\n    //     if (ship.pos[0] === 0) {\r\n    //         return \"hitLeft\";\r\n    //     } else if (ship.pos[0] === 1000) {\r\n    //         return \"hitRight\";\r\n    //     } else if (ship.pos[1] === 0) {\r\n    //         return \"hitTop\";\r\n    //     } else if (ship.pos[1] === 660) {\r\n    //         return \"hitBottom\";\r\n    //     }\r\n    // }\r\n\r\n    isCollidedWith(enemy) {\r\n        const distance = Math.sqrt((this.pos[0] - enemy.pos[0]) ** 2 + (this.pos[1] - enemy.pos[1]) ** 2);\r\n        const totalRadius = this.radius + enemy.radius;\r\n        return distance < totalRadius;\r\n    };\r\n\r\n    isEnemySmaller(enemy) {\r\n        return enemy.radius < this.radius;\r\n    };\r\n\r\n};\r\n\r\nexport default Ship;","import MovingObject from \"./moving-object\";\r\nimport Enemy from \"./enemy\";\r\nimport Ship from \"./ship\";\r\n\r\nclass Game extends MovingObject {\r\n\r\n    constructor() {\r\n        super();\r\n        this.ship = new Ship({});\r\n        this.score = 0;\r\n        this.enemies = [];\r\n        this.addEnemies();\r\n        this.bindKeyHandlers();\r\n        this.backgroundImg = new Image();\r\n\r\n        // this.backgroundImg.src = '../media/orange-test.webp';\r\n        // this.backgroundImg.src = '../media/background_02.jpeg';\r\n        this.backgroundImg.src = 'src/media/background_01.jpg';\r\n    };\r\n\r\n    // runs the game\r\n    step() {\r\n        this.moveEnemies();\r\n        this.addEnemies();\r\n        this.ship.moveShip();\r\n        this.growShip();\r\n    };\r\n\r\n    // it prints the canvas and objects\r\n    drawGame(ctx) {\r\n        ctx.clearRect(0, 0, 1000, 660);\r\n        ctx.drawImage(this.backgroundImg, 0, 0, 1000, 660);\r\n\r\n        this.enemies.forEach((enemy) => {\r\n            enemy.drawObject(ctx);\r\n        });\r\n        \r\n        this.ship.drawObject(ctx);\r\n    };\r\n\r\n    // spawn new enemies\r\n    addEnemies() {\r\n        for (let index = 0; this.enemies.length < 50; index++) {\r\n            const enemy = new Enemy({});\r\n            this.enemies.push(enemy);\r\n        };\r\n    };\r\n\r\n    // enemies cross the canvas until hit the other side\r\n    moveEnemies() {\r\n\r\n        for (let i = 0; i < this.enemies.length; i++) {\r\n            let enemy = this.enemies[i]\r\n            if (this.isOutCanvas(enemy.pos)) {\r\n                this.remove(enemy);\r\n                continue;\r\n            }\r\n\r\n            if (enemy.startEnemyPos === -50) {\r\n                enemy.moveRight();\r\n            } else {\r\n                enemy.moveLeft();\r\n            };\r\n        };\r\n    };\r\n\r\n    // returns a boolean indicating if the given object is out the canvas\r\n    isOutCanvas(pos) {\r\n        if (pos[0] < -50 || pos[0] > 1050) {\r\n            return true;\r\n        };\r\n        return false;\r\n    };\r\n\r\n    // delete object from canvas\r\n    remove(object) {\r\n        const enemyIndex = this.enemies.indexOf(object);\r\n        this.enemies.splice(enemyIndex, 1);\r\n    }\r\n\r\n    // increase the ship's radius by 1 if it collides with a smaller enemy. Otherwise, call the game over function.\r\n    growShip() {\r\n        for (let i = 0; i < this.enemies.length; i++) {\r\n            let enemy = this.enemies[i];\r\n\r\n            if (this.ship.isCollidedWith(enemy) && this.ship.isEnemySmaller(enemy)) {\r\n                this.ship.radius += 0.2;\r\n                this.increaseScore(enemy);\r\n                this.remove(enemy);\r\n            } else if (this.ship.isCollidedWith(enemy) && !this.ship.isEnemySmaller(enemy)) {\r\n                //game over\r\n            };\r\n        };\r\n    };\r\n\r\n    // add to the score\r\n    increaseScore(enemy) {\r\n        return this.score += enemy.radius;\r\n    };\r\n\r\n    bindKeyHandlers() {\r\n        const vel = this.ship.vel\r\n\r\n        document.addEventListener(\"keydown\", function(event) {\r\n            if (event.code === \"ArrowUp\") vel[2] = -2;\r\n            if (event.code === \"ArrowDown\") vel[3] = 2;\r\n            if (event.code === \"ArrowLeft\") vel[0] = -2;\r\n            if (event.code === \"ArrowRight\") vel[1] = 2;\r\n        })\r\n\r\n        document.addEventListener(\"keyup\", function(event) {\r\n            if (event.code === \"ArrowUp\") vel[2] = 0;\r\n            if (event.code === \"ArrowDown\") vel[3] = 0;\r\n            if (event.code === \"ArrowLeft\") vel[0] = 0;\r\n            if (event.code === \"ArrowRight\") vel[1] = 0;\r\n        })\r\n    };\r\n\r\n};\r\n\r\nexport default Game;","import GameView from \"./scripts/game-view\";\r\nimport Enemy from \"./scripts/enemy\";\r\nimport MovingObject from \"./scripts/moving-object\";\r\nwindow.MovingObject = MovingObject;\r\nwindow.Enemy = Enemy;\r\n\r\nconst gameview = new GameView();\r\ngameview.start();","import Game from \"./game\";\r\nimport Ship from \"./ship\";\r\n\r\nclass GameView {\r\n\r\n    constructor() {\r\n        this.game = new Game()\r\n        this.canvas = document.getElementById('background-canvas');\r\n        this.ctx = this.canvas.getContext('2d');\r\n    };\r\n\r\n    start () {\r\n        setInterval(() => {\r\n            this.game.step();\r\n            this.game.drawGame(this.ctx);\r\n        }, 10);\r\n    };\r\n\r\n};\r\n\r\nexport default GameView;"],"names":["constructor","options","moveRight","this","pos","vel","moveLeft","drawObject","ctx","beginPath","arc","radius","Math","PI","fillStyle","fill","closePath","MovingObject","super","randomVel","randomPos","randomRadius","startEnemyPos","validRadius","floor","random","length","startY","validVel","moveShip","isCollidedWith","enemy","sqrt","isEnemySmaller","ship","Ship","score","enemies","addEnemies","bindKeyHandlers","backgroundImg","Image","src","step","moveEnemies","growShip","drawGame","clearRect","drawImage","forEach","index","Enemy","push","i","isOutCanvas","remove","object","enemyIndex","indexOf","splice","increaseScore","document","addEventListener","event","code","window","game","Game","canvas","getElementById","getContext","start","setInterval"],"sourceRoot":""}